{
  "Logging": {
    "LogLevel": {
      "Default": "Information",
      "Microsoft.AspNetCore": "Warning"
    }
  },
  "ConnectionStrings": {
    "DBpublicaciones": "data source=LAPTOP-3CG2UUBT\\FELIXDEVPC;Initial Catalog=MyEntities;Integrated Security=true;MultipleActiveResultSets=False;Encrypt=False;TrustServerCertificate=False"
  },
  "ValidationMessage": {

    "FirstNameRequired": "The First Name is required.",
    "FirstNameTyOFFString": "The First Name must cotain only letters",

    "LastNameRequired": "The Last Name is required.",
    "LastNameTyOFFString": "The Last Name must cotain only letters",

    "HireDateRequired": "The HireDate is required.",
    "HireDateFormat": "Date format must be a date : MM/DD/YYYY",

    "JoblvlRequired": "The Joblvl is required.",
    "JoblvlTypeOFF": "The Joblvl must be an number",

    "MinitRequired": "The Minit is required.",
    "MinitFormat": "Minit must cotain 1 letter",

    "JobsDescriptionRequired": "The job description is required.",
    "JobsDescriptionMaxLenght": "The job description lenght should be over 10 letters.",
    "JobsDescriptionMinLenght": "The job description lenght should be under 50 letters.",
    "JobsDescriptionTypeOFF": "The job description must be a string.",

    "MaxlvlRequired": "The Maxlvl is required.",
    "MaxlvlTypeOFF": "The Maxlvl must be a number",
    "MaxlvlLenght": "Maxlvl lenght must be under 255",

    "MinlvlRequired": "The Minlvl is required.",
    "MinlvlTypeOFF": "The Maxlvl must be a number",
    "MinlvlLenght": "Minlvl lenght must be under 255",

    "PubNameRequired": "The Publisher Name is required.",
    "PubNameTyOFF": "The Name of the Publisher must be text",

    "CityRequired": "The city Name is required.",
    "CityTypeOFF": "The Name of the City must be a text",
    "CityMaxLenght": "The city lenght must be under 20 letters",
    "CityMinLenght": "The city minimun lenght must be over 5 letters",

    "CountryRequired": "The Country Name is required.",
    "CountryTypeOFF": "The Name of the Country must be text",

    "StateRequired": "The State Name required.",
    "StateTypeOFF": "The Sate must contain letters.",
    "StateLenght": "The Sate must contain just 2 letters.",

    "ValidateID": "The ID to Update must be an Number",

    "ObjectRemove": "The object has alredy been removed"
  },
  "JobSuccessMessages": {
    "getAllJobsSuccessMessage": "The jobs has been successfully consulted.",
    "getJobsSuccessMessage": "The job has been successfully consulted.",
    "addJobSuccessMessage": "The job has been successfully saved.",
    "updateSuccessMessage": "The job has been successfully update.",
    "removeSuccessMessage": "The job has been successfully removed."
  },
  "JobErrorMessage": {
    "getAllJobErrorMessage": "An error has ocurred while obtaining the job.",
    "getJobErrorMessage": "An error has ocurred while obtaining the jobs.",
    "addJobErrorMessage": "An error has occured while saving the job.",
    "updateJobErrorMessage": "An error has occured while updating the job.",
    "removeJobErrorMessage": "An error has occured while removing a job."
  },
  "EmployeeSuccessMessages": {
    "getAllEmployeesSuccessMessage": "The employees has been successfully consulted.",
    "getEmployeeSuccessMessage": "The employee has been successfully consulted.",
    "addEmployeeSuccessMessage": "The employee has been successfully saved",
    "updateEmployeeSuccessMessage": "The employee has been successfully updated",
    "removeEmployeeSuccessMessage": "The employee has been successfully removed"
  },
  "EmployeeErrorMessage": {
    "getAllEmployeessErrorMessage": "An error has ocurred while obtaining the employee.",
    "getEmployeeErrorMessage": "An error has ocurred while obtaining the employee.",
    "addEmployeeErrorMessage": "An error has occured while saving the employee.",
    "updateEmployeeErrorMessage": "An error has occured while updating the employee.",
    "removedEmployeeErrorMessage": "An error has occured while removing the employee."
  },
  "PublisherSuccessMessages": {
    "getAllPublisherSuccessMessage": "The publishers has been successfully consulted",
    "getPublisherSuccessMessage": "The publisher has been successfully consulted",
    "addPublisherSuccessMessage": "The publisher has been successfully saved.",
    "updatePublisherSuccessMessage": "The publisher has been successfully update.",
    "removePublisherSuccessMessage": "The publisher has been successfully removed."
  },
  "PublisherErrorMessage": {
    "getAllPublisherErrorMessage": "An error has ocurred while obtaining the publisher.",
    "getPublisherErrorMessage": "An error has ocurred while obtaining the publisher.",
    "addPublisherErrorMessage": "An error has occured while saving the publisher.",
    "updatePublisherErrorMessage": "An error has occured while updating the publisher.",
    "removedPublisherErrorMessage": "An error has occured while removing the publisher."
  }
}